<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>FormMantenimiento</Title>
      <Author>Jose Chacon</Author>
      <Description>Define un Modelo con EntityFramework</Description>
      <Shortcut>cstformmnt</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>Model</ID>
          <ToolTip>Reemplazar por el Nombre del modelo</ToolTip>
          <Default>Model</Default>
        </Literal>
        <Literal>
          <ID>DataSourceName</ID>
          <ToolTip>Reemplazar por el Nombre del modelo</ToolTip>
          <Default>DataSourceName</Default>
        </Literal>
        <Literal>
          <ID>CommonLibraryName</ID>
          <ToolTip>Nombre del esquema</ToolTip>
          <Default>AdmCostoProduccion.Common</Default>
        </Literal>
        <Literal>
          <ID>LibraryName</ID>
          <ToolTip>Nombre del esquema</ToolTip>
          <Default>AdmCostoProduccion.Windows.Mantenimiento</Default>
        </Literal>
        <Literal>
          <ID>EsquemaName</ID>
          <ToolTip>Nombre del esquema</ToolTip>
          <Default>Mantenimiento</Default>
        </Literal>
        <Literal>
          <ID>FolderName</ID>
          <ToolTip>Nombre del esquema</ToolTip>
          <Default>Mercaderia</Default>
        </Literal>
      </Declarations>
      <Code Language="csharp">
        <![CDATA[using $CommonLibraryName$.Classes;
using $CommonLibraryName$.ViewModels.$EsquemaName$;
using ComponentFactory.Krypton.Toolkit;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Entity;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace $LibraryName$.$EsquemaName$.$FolderName$
{
    public partial class Mnt$Model$Form : KryptonForm
    {
        #region Propiedades
        private $Model$ViewModel ViewModel = new $Model$ViewModel();
        private ObservableListSource<$Model$ViewModel> ViewModelList;
        #endregion

        #region Constructor
        public Mnt$Model$Form($Model$ViewModel viewModel
            , ObservableListSource<$Model$ViewModel> viewModelList)
        {
            InitializeComponent();
            ViewModel = new $Model$ViewModel();
            ViewModel.CopyOf(viewModel);
            ViewModelList = viewModelList;
            $DataSourceName$BindingSource.DataSource = ViewModel;
        }

        public Mnt$Model$Form(ObservableListSource<$Model$ViewModel> viewModelList)
        {
            InitializeComponent();
            ViewModel = new $Model$ViewModel();
            ViewModelList = viewModelList;
            $DataSourceName$BindingSource.DataSource = ViewModel;
        }
        #endregion

        #region Eventos de Formulario
        private void GrabarButton_Click(object sender, EventArgs e)
        {
            Grabar();
        }

        private void CancelarButton_Click(object sender, EventArgs e)
        {
            $DataSourceName$BindingSource.CancelEdit();
            this.Close();
        }
        #endregion

        #region Eventos Privados

        private void Grabar()
        {
            try
            {
                bool IsNew = ViewModel.IsNew;
                Cursor = Cursors.WaitCursor;
                $DataSourceName$BindingSource.EndEdit();
                ViewModel.Grabar();
                if (IsNew) ViewModelList.Add(ViewModel);
                else
                {
                    var viewModel = ViewModelList
                        .Where(o => o.$Model$Id == ViewModel.$Model$Id)
                        .FirstOrDefault();
                    viewModel.CopyOf(ViewModel);
                }
                this.Close();

            }
            catch (Exception ex)
            {
                MessageBox.Show(string.Format("Ocurrió un error al grabar, mensaje de error: {0}", ex.Message)
                    , "Grabar", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                Cursor = Cursors.Default;
            }
        }
        #endregion
    }
}
]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>